@model List<ProductViewModel>
@{
    int totalCount = ViewBag.TotalCount;
    int currentPage = ViewBag.CurrentPage;
    int pageSize = ViewBag.PageSize;
    int totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 style="color: #7fad39; margin-bottom: 0;">
            <i class="fa fa-list"></i> Product List
        </h2>

        <div class="d-flex align-items-center gap-3">
            <div class="filter__sort">
                <span>Sort By</span>
                <select>
                    <option value="0">Default</option>
                    <option value="1">Price: Low to High</option>
                    <option value="2">Price: High to Low</option>
                    <option value="3">Total Sold: High to Low</option>
                    <option value="4">Total Sold: High to Low</option>
                </select>
            </div>
            <div class="filter__found">
                <h6><span id="product-count"></span> @totalCount Products listed</h6>
            </div>
            <a asp-action="Create" class="btn btn-success rounded-pill" style="background-color: #7fad39; border-color: #7fad39;">
                <i class="fa fa-plus"></i> Create New Product
            </a>
        </div>
    </div>

    <div class="modern-table-container">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Price <i class="fa fa-dollar"></i></th>
                    <th>Total Sold</th>
                    <th>Total Revenue</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="product-table-body">
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.ProductName</td>
                        <td>@product.CategoryName</td>
                        <td>@product.Price.ToString("N")</td>
                        <td>@product.TotalSoldQuantity</td>
                        <td>@product.TotalRevenue.ToString("N")</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@product.Id" class="btn-xs site-btn"> <i class="fa fa-pencil-square-o"></i> Edit </a>
                            <form asp-action="Delete" asp-route-id="@product.Id" method="post" style="display:inline">
                                <button type="submit" class="btn-xs site-btn"> <i class="fa fa-trash-o"></i> Delete </button>
                            </form>
                            <a asp-action="Details" asp-route-id="@product.Id" class="btn-xs site-btn"> <i class="fa fa-info-circle"></i> Details </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-center mt-4">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="#" onclick="fetchProducts(@(currentPage - 1))" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="#" onclick="fetchProducts(@i)">@i</a>
                    </li>
                }

                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="#" onclick="fetchProducts(@(currentPage + 1))" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section SidebarContent {
    <div class="sidebar__item">
        <h4>Price</h4>
        <div class="price-range-wrap">
            <div class="price-range ui-slider ui-corner-all ui-slider-horizontal ui-widget ui-widget-content"
                 data-min=@ViewBag.MinPrice data-max=@ViewBag.MaxPrice>
                <div class="ui-slider-range ui-corner-all ui-widget-header"></div>
                <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
            </div>
            <div class="range-slider">
                <div class="price-input">
                    <input type="number" id="minamount" placeholder="Min">
                    <input type="number" id="maxamount" placeholder="Max">
                    <button id="apply-price-filter" class="btn site-btn mt-2">Apply</button>
                </div>
            </div>
        </div>
    </div>



}


<style>
    .modern-table-container {
        background-color: #ffffff;
        border-radius: 1rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

        .modern-table-container .table thead th {
            background-color: #7fad39;
            color: #ffffff;
            font-weight: 600;
        }

        .modern-table-container .table tbody tr:hover {
            background-color: #f5f5f5;
        }

        .modern-table-container .table {
            margin-bottom: 0;
        }

    .btn-xs {
        padding: .25rem .5rem;
        font-size: .75rem;
        line-height: 1.5;
        border-radius: .2rem;
    }

</style>


<script>
    function fetchProducts(pageNumber) {
        const url = '@Url.Action("GetProductDetailsJSON", "Product", new { page = "PAGE_NUM_PLACEHOLDER" })'
            .replace("PAGE_NUM_PLACEHOLDER", pageNumber);

        fetch(url)
            .then(response => response.json())
            .then(data => {
                const tableBody = document.getElementById('product-table-body');
                tableBody.innerHTML = '';

                data.data.forEach(product => {
                    const row = `
                        <tr>
                            <td>${product.productName}</td>
                            <td>${product.categoryName}</td>
                            <td>${product.price}</td>
                            <td>${product.totalSoldQuantity}</td>
                            <td>${product.totalRevenue}</td>
                            <td>
                                <a href="/Admin/Product/Edit/${product.id}" class="btn-xs site-btn">
                                    <i class="fa fa-pencil-square-o"></i> Edit
                                </a>
                                <form action="/Admin/Product/Delete/${product.id}" method="post" style="display:inline">
                                    <button type="submit" class="btn-xs site-btn">
                                        <i class="fa fa-trash-o"></i> Delete
                                    </button>
                                </form>
                                <a href="/Admin/Product/Details/${product.id}" class="btn-xs site-btn">
                                    <i class="fa fa-info-circle"></i> Details
                                </a>
                            </td>
                        </tr>`;
                    tableBody.innerHTML += row;
                });
            });
    }
</script>
