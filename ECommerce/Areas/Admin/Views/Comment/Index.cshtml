<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 style="color: #7fad39; margin-bottom: 0;">
            <i class="fa fa-comments"></i> Comment List
        </h2>
        <div class="filter__sort">
            <span>Sort By</span>
            <select id="sort-select" style="display: block;" class="form-select form-select-sm">
                <option value="default">Default</option>
                <option value="priceasc">Price: Low to High</option>
                <option value="pricedesc">Price: High to Low</option>
                <option value="totalsolddesc">Total Sold: High to Low</option>
                <option value="totalsoldasc">Total Sold: Low to High</option>
            </select>
        </div>
    </div>

    <div class="modern-table-container">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Comment Text</th>
                    <th>User</th>
                    <th>Product</th>
                    <th>Date</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="comment-table-body">
                @foreach (var comment in Model)
                {
                    <tr>
                        <td>@comment.Text</td>
                        <td>@comment.User?.UserName</td>
                        <td>@comment.Product.Name</td>
                        <td>@comment.CreatedAt.ToShortDateString()</td>
                        <td>
                            @if (comment.IsApproved)
                            {
                                <span class="badge bg-success">Approved</span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark">Pending</span>
                            }
                            @if (comment.IsDeleted)
                            {
                                <span class="badge bg-danger">Deleted</span>
                            }
                        </td>
                        <td>
                            <form  method="post" style="display:inline;">
                                <button type="submit" class="btn btn-sm site-btn"> <i class="fa fa-check"></i> Approve </button>
                            </form>
                            <form asp-area="Admin" asp-controller="Comment" asp-action="Delete" asp-route-id="@comment.Id" method="post" style="display:inline;">
                                <button type="submit" class="btn btn-sm site-btn"> <i class="fa fa-trash-o"></i> Delete </button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @* <div class="d-flex justify-content-center mt-4">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="#" onclick="fetchComments(@(currentPage - 1))" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="#" onclick="fetchComments(@i)">@i</a>
                    </li>
                }

                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="#" onclick="fetchComments(@(currentPage + 1))" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div> *@
</div>


<style>
.modern-table-container {
    background-color: #ffffff;
    border-radius: 1rem; /* 16px */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    overflow: hidden; /* İçerik taşmasını engeller ve köşelerin yuvarlatılmasına yardımcı olur */
}

/* Tablo başlık stili */
.modern-table-container .table thead th {
    background-color: #7fad39;
    color: #ffffff;
    font-weight: 600;
}

/* Tablo satırlarına geçiş efekti */
.modern-table-container .table tbody tr:hover {
    background-color: #f5f5f5; /* Hafif gri */
}

/* Buton gruplarını düzenleme */
.modern-table-container .btn-group {
    border-radius: 0.5rem; /* 8px */
}

/* Tabloyu daha düzenli göstermek için */
.modern-table-container .table {
    margin-bottom: 0;
}

.btn-xs {
    padding: .25rem .5rem;
    font-size: .75rem;
    line-height: 1.5;
    border-radius: .2rem;
}

</style>

@section Scripts{


<script>



    //////////////// Silme işlemi için onay popup'ını göster

        const deleteButtons = document.querySelectorAll("form button[type='submit']");

        deleteButtons.forEach(button => {
            button.addEventListener("click", function(event){
                event.preventDefault();

                Swal.fire({
                    title: "Emin misiniz?",
                    text: "Bu Yorumu silmek istediğinize emin misiniz?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Evet, sil!",
                    cancelButtonText: "Hayır, vazgeç"
                }).then((result) => {
                    if (result.isConfirmed){
                        button.closest("form").submit();
                    }
                });
            });
        });



        ///////////// Filtrele ve sırala ////////////////////

        //sayfa yüklendiğinde sıralama barı, seacrh barı ve filtreler hep olacak, o sebeple başlangıçta bu eventlistenerları onlara atayabilirim
        document.addEventListener("DOMContentLoaded", function(){

            const filter = {
                        SearchTerm : null,
                        MinDate : null,
                        MaxDate : null,
                        CategoryId : null,
                        ProductId: null,
                        IsApproved : null,
                        IsDeleted : null,
                        Page : null,
                        Size : null,
                        SortBy : null
            };
            
            const sortMenu = document.getElementById("sort-select");
            sortMenu.addEventListener("change", function(event){

                const urlParams = new URLSearchParams(window.location.search);

                urlParams.forEach((value, key) => {
                    if (filter.hasOwnProperty(key)){
                        filter[key] = value;
                    }
                });

                filter["SortBy"] = event.target.value;

                const cleanFilter = {};
                    for (const key in filter) {
                        if (filter[key] !== null && filter[key] !== undefined && filter[key] !== "") {
                            cleanFilter[key] = filter[key];
                        }
                    }

                const baseUrl = "/Comment/GetCommentsJSON" ;
                const queryParams = new URLSearchParams(cleanFilter).toString();
                const tableBody = document.getElementById("comment-table-body");

                fetch(`${baseUrl}?${queryParams}`)
                .then(res => res.json())
                .then(res =>  {

                    tableBody.innerHTML = '';

                    res.data.forEach(comment => {
                        const row = `
                            <tr>
                                <td>${comment.text}</td>
                                <td>${comment.user ? comment.user.userName : ''}</td>
                                <td>${comment.product ? comment.product.name : ''}</td>
                                <td>${new Date(comment.createdAt).toLocaleDateString()}</td>
                                <td>
                                    ${comment.isApproved ? '<span class="badge bg-success">Approved</span>' : '<span class="badge bg-warning text-dark">Pending</span>'}
                                    ${comment.isDeleted ? '<span class="badge bg-danger">Deleted</span>' : ''}
                                </td>
                                <td>
                                    <button onclick="approveComment(${comment.id})" class="btn-xs site-btn">
                                        <i class="fa fa-check"></i> Approve
                                    </button>
                                    <button onclick="deleteComment(${comment.id})" class="btn-xs site-btn">
                                        <i class="fa fa-trash-o"></i> Delete
                                    </button>
                                </td>
                            </tr>`;
                        tableBody.innerHTML += row;
                    });


            });




        });


           


            

                    // Burada pagination UI'ını da güncelleyebilirsin
                });
        }

        function approveComment(id) {
            fetch(`/Admin/Comment/Approve/${id}`, { method: 'POST' })
                .then(res => res.json())
                .then(() => fetchComments(1));
        }

        function deleteComment(id) {
            fetch(`/Admin/Comment/Delete/${id}`, { method: 'POST' })
                .then(res => res.json())
                .then(() => fetchComments(1));
        }
    </script>



}

