@model CheckoutViewModel



@{

    var cartItems = Model.Cart.CartItems ?? new List<CartItem>();
    var subTotal = cartItems.Sum(c => c.Quantity * c.UnitPrice);

    DiscountCoupon? coupon = Model.Cart.AppliedCoupon;
    var discountAmount = coupon?.DiscountAmount;
    var price = discountAmount.HasValue? (subTotal - discountAmount) : subTotal;

    var isThereShippingFee = price < 350;
    var shippingFee =  isThereShippingFee?  89 : 0;

    var firstAddress = Model.Addresses.FirstOrDefault();
    var selectedCountryId = firstAddress?.City?.CountryId ?? 0;
    var selectedCityId = firstAddress?.CityId ?? 0;
    var street = firstAddress?.Street ?? "";

}



<!-- Checkout Section Begin -->
<section class="checkout spad">
    <div class="container">
        <div class="checkout__form">
            <h4>Fatura Detayları</h4>
            <form id="checkout-form" asp-action="Checkout" method="post">
                <div class="row">
                    <div class="col-lg-8 col-md-6">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="checkout__input">
                                    <p>Ad<span>*</span></p>
                                    <input asp-for="FirstName" type="text" value="@Model.FirstName"> 
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="checkout__input">
                                    <p>Soyad<span>*</span></p>
                                    <input asp-for="LastName" type="text" value="@Model.LastName">
                                </div>
                            </div>
                        </div>
                        <div class="checkout__input">
                            <p>Ülke<span>*</span></p>
                            <select id="country-select" class="checkout-select"></select>
                        </div>
                        <div class="checkout__input">
                            <p>Şehir<span>*</span></p>
                            <select asp-for="CityId" id="city-select" class="checkout-select"></select>
                        </div>
                        <div class="checkout__input">
                            <p>Adres<span>*</span></p>
                            <input  asp-for="Street" type="text" id="street" placeholder="Açık Adres" class="checkout__input__add">
                        </div>
@*                         <div class="checkout__input">
                            <p>Country/State<span>*</span></p>
                            <input type="text">
                        </div> *@
                        <div class="checkout__input">
                            <p>Posta kodu<span>*</span></p>
                            <input type="text" asp-for="PostalCode">
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="checkout__input">
                                    <p>Telefon<span>*</span></p>
                                    <input asp-for="PhoneNumber" type="text" value="@Model.PhoneNumber">
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="checkout__input">
                                    <p>E-posta<span>*</span></p>
                                    <input asp-for="Email" type="text" value="@Model.Email">
                                </div>
                            </div>
                        </div>
                                 
                    </div>
                    <div class="col-lg-4 col-md-6">
                        <div class="checkout__order">
                            <h4>Siparişiniz</h4>
                            <div class="checkout__order__products">Ürünler <span>Toplam</span></div>
                            <ul>
                                @foreach (var item in cartItems)
                                {
                                    <li> @item.Product.Name (@item.Quantity x @item.UnitPrice)  <span> @(item.Quantity * item.UnitPrice)</span></li>
                                }
                                
                            </ul>
                            <div class="checkout__order__subtotal">Ara Toplam <span>@subTotal TL</span></div>

                            @if (!isThereShippingFee)
                            {
                                <div class="checkout__order__discount">Kargo <span> ÜCRETSİZ</span></div>
                                <input type="hidden" asp-for="ShippingFee" value=0/>
                            }
                            else
                            {
                                <div class="checkout__order__subtotal">Kargo <span>@shippingFee TL</span></div>
                                <input type="hidden" asp-for="ShippingFee" value=@shippingFee />
                            }

                            @if (discountAmount.HasValue)
                            {
                                <div class="checkout__order__discount">İndirim/Kupon <span> @discountAmount TL</span></div>   
                                <input type="hidden" asp-for="DiscountAmount" value=@discountAmount />
                            }
                            else
                            {
                                <input type="hidden" asp-for="DiscountAmount" value=0 />
                            }
                            <div class="checkout__order__total">Toplam <span id="total-span"> @price TL</span></div>
                            <input type="hidden" asp-for="Currency" id="currency-input"/>
                            

                            <div class="checkout__input__checkbox">
                                <label for="contract">
                                    <span style="color:#7fad39; font-weight:500">Ön bilgilendirme formu</span>'nu ve <span style="color:#7fad39; font-weight:500">Mesafeli satış sözleşmesi</span> 'ni onaylıyorum.
                                    <input type="checkbox" id="contract">
                                    <span class="checkmark"></span>
                                </label>

                                <label for="currency">
                                    Döviz ile ödemek istiyorum
                                    <input type="checkbox" id="currency"/>
                                    <span class="checkmark"></span>
                                </label>
                            </div>


                                <div class="radio-tile-group" id="currencyDiv">
                                    <div class="input-container">
                                        <input id="USD" class="radio-button" type="radio" name="radio" value="USD"/>
                                        <div class="radio-tile">
                                            <div class="icon dollar-icon">
                                                <svg fill="#000000" width="64px" height="64px" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M196,168a44.04978,44.04978,0,0,1-44,44H132v20a4,4,0,0,1-8,0V212H104a44.04978,44.04978,0,0,1-44-44,4,4,0,0,1,8,0,36.04061,36.04061,0,0,0,36,36h48a36,36,0,0,0,0-72H108a44,44,0,0,1,0-88h16V24a4,4,0,0,1,8,0V44h12a44.04978,44.04978,0,0,1,44,44,4,4,0,0,1-8,0,36.04061,36.04061,0,0,0-36-36H108a36,36,0,0,0,0,72h44A44.04978,44.04978,0,0,1,196,168Z"></path> </g></svg>
                                            </div>
                                            <label for="dollar" class="radio-tile-label">Dolar</label>
                                        </div>
                                    </div>

                                    <div class="input-container">
                                        <input id="EUR" class="radio-button" type="radio" name="radio" value="EUR"/>
                                        <div class="radio-tile">
                                            <div class="icon euro-icon">
                                                <svg fill="#000000" width="64px" height="64px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M4,13.5H6.111A11.218,11.218,0,0,1,6,12a11.218,11.218,0,0,1,.111-1.5H4a1,1,0,0,1,0-2H6.571A8.983,8.983,0,0,1,14.857,2a7.962,7.962,0,0,1,3.59.854,1,1,0,0,1-.894,1.79A5.98,5.98,0,0,0,14.857,4,6.857,6.857,0,0,0,8.7,8.5H14a1,1,0,0,1,0,2H8.125a9.062,9.062,0,0,0,0,3H13a1,1,0,0,1,0,2H8.7A6.857,6.857,0,0,0,14.857,20a5.98,5.98,0,0,0,2.7-.644,1,1,0,0,1,.894,1.79,7.962,7.962,0,0,1-3.59.854,8.983,8.983,0,0,1-8.286-6.5H4a1,1,0,0,1,0-2Z"></path></g></svg>
                                            </div>
                                            <label for="euro" class="radio-tile-label">Euro</label>
                                        </div>
                                    </div>

                                    <div class="input-container">
                                        <input id="GBP" class="radio-button" type="radio" name="radio" value="GBP"/>
                                        <div class="radio-tile">
                                            <div class="icon pound-icon">
                                                <svg fill="#000000" width="64px" height="64px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path fill-rule="evenodd" d="M13,2 C15.7614237,2 18,4.23857625 18,7 C18,7.55228475 17.5522847,8 17,8 C16.4871642,8 16.0644928,7.61395981 16.0067277,7.11662113 L16,7 C16,5.34314575 14.6568542,4 13,4 C11.4023191,4 10.0963391,5.24891996 10.0050927,6.82372721 L10,7 L10,13 L13,13 C13.5128358,13 13.9355072,13.3860402 13.9932723,13.8833789 L14,14 C14,14.5128358 13.6139598,14.9355072 13.1166211,14.9932723 L13,15 L10,15 L10,20 L18,20 C18.5522847,20 19,20.4477153 19,21 C19,21.5522847 18.5522847,22 18,22 L6,22 C5.44771525,22 5,21.5522847 5,21 C5,20.4477153 5.44771525,20 6,20 L8,20 L8,15 L7,15 C6.48716416,15 6.06449284,14.6139598 6.00672773,14.1166211 L6,14 C6,13.4871642 6.38604019,13.0644928 6.88337887,13.0067277 L7,13 L8,13 L8,7 C8,4.23857625 10.2385763,2 13,2 Z"></path> </g></svg>
                                            </div>
                                            <label for="pound" class="radio-tile-label">Pound</label>
                                        </div>
                                    </div>

                                    <div class="input-container">
                                        <input id="JPY" class="radio-button" type="radio" name="radio" value="JPY"/>
                                        <div class="radio-tile">
                                            <div class="icon yen-icon">
                                                <svg fill="#000000" width="64px" height="64px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path fill-rule="evenodd" d="M18.6,2.2 C19.007841,2.50588078 19.1155105,3.06348933 18.8690296,3.49497485 L18.8,3.6 L12.9999411,11.3329411 L12.9999411,11.9999411 L16,12 C16.5522847,12 17,12.4477153 17,13 C17,13.5522847 16.5522847,14 16,14 L12.9999411,13.9999411 L12.9999411,15.9999411 L16,16 C16.5522847,16 17,16.4477153 17,17 C17,17.5522847 16.5522847,18 16,18 L12.9999411,17.9999411 L13,21 C13,21.5522847 12.5522847,22 12,22 C11.4477153,22 11,21.5522847 11,21 L10.9999411,17.9999411 L8,18 C7.44771525,18 7,17.5522847 7,17 C7,16.4477153 7.44771525,16 8,16 L10.9999411,15.9999411 L10.9999411,13.9999411 L8,14 C7.44771525,14 7,13.5522847 7,13 C7,12.4477153 7.44771525,12 8,12 L10.9999411,11.9999411 L10.9999411,11.3329411 L5.2,3.6 C4.86862915,3.1581722 4.9581722,2.53137085 5.4,2.2 C5.80784105,1.89411922 6.37329269,1.94688696 6.71850414,2.30432455 L6.8,2.4 L11.999,9.332 L17.2,2.4 C17.5313708,1.9581722 18.1581722,1.86862915 18.6,2.2 Z"></path> </g></svg>
                                            </div>
                                            <label for="yen" class="radio-tile-label">Yen</label>
                                        </div>
                                    </div>
                                </div>



                            <button  id="confirm-cart" type="submit" class="site-btn">Siparişi Onayla</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</section>
<!-- Checkout Section End -->


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {


            const totalSpan = document.getElementById("total-span");

            let tlString = totalSpan.textContent;

            tlString = tlString.replace(" TL", "");
            tlString = tlString.replace(",", ".");

            const turkishLiras = parseFloat(tlString);

            // Döviz seçeneklerini göster
            const currencyCheckbox = document.getElementById("currency");
            const currencyDiv = document.getElementById("currencyDiv");

     
            currencyCheckbox.addEventListener("change", function() {
                if (this.checked) {
                    currencyDiv.style.display = "flex"; // önce görünür yap
                    setTimeout(() => currencyDiv.classList.add("show"), 10); // sonra animasyonu başlat
                } else {
                    currencyDiv.classList.remove("show"); // animasyonu tersine çalıştır
                    currencyDiv.addEventListener('transitionend', function handler() {
                        currencyDiv.style.display = "none"; // animasyon bitince tamamen gizle
                        currencyDiv.removeEventListener('transitionend', handler);
                    });
                    totalSpan.textContent = `${turkishLiras} TL`;
                }
            });



            


            // Döviz seçeneklerine tıklanınca
            var containers = document.querySelectorAll(".input-container");
            containers.forEach(container => {
                const radio = container.querySelector(".radio-button");

                container.addEventListener("click", () => {
                    radiochecked = true;
                    radio.dispatchEvent(new Event("change"));
                });   
            });

            var radios = document.querySelectorAll(".radio-button");
            radios.forEach(item => {
                
                item.addEventListener("click", function() {
                    console.log(turkishLiras);

                    const code = item.value;


                    fetch("/Currency/CalculatePrice", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            code: code,
                            turkishLiras: turkishLiras
                        })
                    })
                    .then(res => res.json())
                    .then(data => {

                        let code = data.code;
                        let price = data.price;
                        const currencyInput = document.getElementById("currency-input");
                        currencyInput.value = code;
                        totalSpan.textContent = `${code} ${price.toFixed(2)}`;

                    
                    })
                    .catch(err => {
                        console.error(err);
                        Swal.fire({
                            title: "Hata!",
                            text: "Döviz değerine ulaşılırken hata File karşılaşıldı",
                            icon: "error"
                        });
                    });


                });
            });




            const countrySelect = document.getElementById("country-select");
            const citySelect = document.getElementById("city-select");

            // Razor'dan gelen değerleri JSON olarak güvenli şekilde alıyoruz
            const selectedCountryId = @Html.Raw(Json.Serialize(selectedCountryId));
            let selectedCityId = @Html.Raw(Json.Serialize(selectedCityId));

            // -------------------- Fonksiyonlar --------------------
            function loadCities(countryId) {
                fetch(`/Common/GetAllCitiesByCountryId?countryId=${countryId}`)
                    .then(res => res.json())
                    .then(data => {
                        citySelect.innerHTML = '';
                        data.data.forEach(city => {
                            const option = document.createElement('option');
                            option.value = city.id;
                            option.textContent = city.name;
                            if(city.id == selectedCityId) option.selected = true;
                            citySelect.appendChild(option);
                        });
                    })
                    .catch(err => {
                        console.error(err);
                        Swal.fire({
                            title: "Hata!",
                            text: "Şehirler yüklenirken bir hata ile karşılaşıldı",
                            icon: "error"
                        });
                    });
            }

            function loadCountries() {
                fetch(`/Common/GetAllCountries`)
                    .then(res => res.json())
                    .then(data => {
                        countrySelect.innerHTML = `<option value="">Ülke seçin</option>`;
                        data.data.forEach(country => {
                            const option = document.createElement("option");
                            option.value = country.id;
                            option.textContent = country.name;
                            if (country.id == selectedCountryId) option.selected = true;
                            countrySelect.appendChild(option);
                        });

                        if (selectedCountryId && selectedCountryId != 0) {
                            loadCities(selectedCountryId);
                        }
                    })
                    .catch(err => {
                        console.error(err);
                        Swal.fire({
                            title: "Hata!",
                            text: "Ülkeler yüklenirken bir hata ile karşılaşıldı",
                            icon: "error"
                        });
                    });
            }

            // -------------------- Event Listener --------------------
            countrySelect.addEventListener("change", function() {
                const selectedCountry = countrySelect.value;
                citySelect.innerHTML = '<option value="">Şehir seçin</option>';
                if (selectedCountry) loadCities(selectedCountry);
            });

            // City focus
            let isWarningShown = false;
            citySelect.addEventListener("focus", function() {
                const selectedCountry = countrySelect.value;
                if (!selectedCountry && !isWarningShown) {
                    Swal.fire({
                        title: "Uyarı!",
                        text: "Öncelikle ülke seçmelisiniz!",
                        icon: "warning"
                    });
                    isWarningShown = true;
                }
            });

            // -------------------- Buton tıklama işlemi --------------------
            const form = document.getElementById("checkout-form");
            const contractCheckbox = document.getElementById("contract");

            const confirmButton = document.getElementById("confirm-cart");

            confirmButton.addEventListener("click", async function(e) {
            e.preventDefault();

            if (!contractCheckbox.checked){
                Swal.fire({
                    title: "Hata",
                    text: "Ön bilgilendirme formunu işaretlemiz gerekmektedir!",
                    icon: "warning"
                });
                return;
            }

            // Loading aç
            Swal.fire({
                title: "İşleminiz gerçekleşiyor...",
                html: "Lütfen bekleyin",
                allowOutsideClick: false,
                didOpen: () => Swal.showLoading()
            });

            try {
                const formData = new FormData(form);

                
                await new Promise(resolve => setTimeout(resolve, 3000));

                // Fetch isteği
                const res = await fetch(`/Cart/Checkout`, {
                    method: "POST",
                    body: formData
                });
                const data = await res.json();

                Swal.close(); // Loading kapat

                if (data.success) {
                    Swal.fire({
                        title: "Başarılı!",
                        text: data.message || "Siparişiniz oluşturuldu",
                        icon: "success"
                    }).then(() =>{
                        window.location.replace(`/Cart/Success?orderId=${data.orderId}`);
                    });

                   
                } else {
                    Swal.fire({
                        title: "Hata!",
                        text: data.message || "Sipariş oluşturulamadı",
                        icon: "error"
                    });
                }

            } catch (err) {
                console.error(err);
                Swal.close();
                Swal.fire({
                    title: "Hata!",
                    text: "Sunucu ile bağlantı kurulamadı",
                    icon: "error"
                });
            }
        });


            // -------------------- Sayfa yüklendiğinde --------------------
            loadCountries();

        });
    </script>
}



<style>
    
    .checkout-select {
        width: 100%;
        padding: 10px 12px;
        border-radius: 5px;
        border: 1px solid #ccc;
        font-size: 16px;
        font-weight: 600;
        background-color: #fff;
        color: #7fad39;
        cursor: pointer;
    }

    :root {
        --primary-color: #7fad39;
    }

    .radio-tile-group {
        display: flex; /* Flex hep aktif */
        flex-wrap: wrap;
        justify-content: center;
        height: 0; /* başta hiç yer kaplamasın */
        overflow: hidden; /* gizli alanları gösterme */
        transition: height 0.6s ease;
    }

        .radio-tile-group.show {
            height: auto; /* görünür olduğunda yüksekliği aç */
        }


        .radio-tile-group .input-container {
            position: relative;
            height: 6rem;
            width: 6rem;
            margin: 0.5rem;
        }

            .radio-tile-group .input-container .radio-button {
                opacity: 0;
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                margin: 0;
                cursor: pointer;
            }

            .radio-tile-group .input-container .radio-tile {
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                width: 100%;
                height: 100%;
                border: 2px solid var(--primary-color);
                border-radius: 5px;
                padding: 1rem;
                transition: transform 300ms ease;
            }

                .radio-tile-group .input-container .radio-tile .icon svg {
                    fill: var(--primary-color);
                    width: 3rem;
                    height: 3rem;
                }

                .radio-tile-group .input-container .radio-tile .radio-tile-label {
                    text-align: center;
                    font-size: 0.75rem;
                    font-weight: 600;
                    text-transform: uppercase;
                    letter-spacing: 1px;
                    color: var(--primary-color);
                }

            .radio-tile-group .input-container .radio-button:checked + .radio-tile {
                background-color: var(--primary-color);
                border: 2px solid var(--primary-color);
                color: white;
                transform: scale(1.1);
            }

                .radio-tile-group .input-container .radio-button:checked + .radio-tile .icon svg {
                    fill: white;
                }

                .radio-tile-group .input-container .radio-button:checked + .radio-tile .radio-tile-label {
                    color: white;
                    background-color: var(--primary-color);
                }
</style>

