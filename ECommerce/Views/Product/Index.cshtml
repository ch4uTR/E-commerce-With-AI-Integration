@model List<ProductViewModel>


@{
    int totalCount = ViewBag.TotalCount;
    int currentPage = ViewBag.CurrentPage;
    int pageSize = ViewBag.PageSize;
    int totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
    int? selectedCategoryId = ViewBag.SelectedCategoryId;
}


<section class="product spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-5">
                <div class="sidebar">
                    <div class="sidebar__item">
                        <h4>Kategoriler</h4>


                        <ul id="sidebar-category-ul">
                            @await Component.InvokeAsync("CategoryList", selectedCategoryId)
                        </ul>

                    </div>
                    <div class="sidebar__item">
                        <h4>Fiyat</h4>
                        <div class="price-range-wrap">
                            <div class="price-range ui-slider ui-corner-all ui-slider-horizontal ui-widget ui-widget-content"
                                 data-min="@ViewBag.MinPrice" data-max="@ViewBag.MaxPrice">
                                <div class="ui-slider-range ui-corner-all ui-widget-header"></div>
                                <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                                <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                            </div>
                            <div class="range-slider">
                                <div class="price-input">
                                    <input type="text" id="minamount">
                                    <input type="text" id="maxamount">
                                </div>
                            </div>
                        </div>
                    </div>                                                       
                </div>
            </div>
            <div class="col-lg-9 col-md-7">
                <div class="filter__item">
                    <div class="row">
                        <div class="col-lg-4 col-md-5">
                            <div class="filter__sort">
                                <span>Sırala</span>
                                <select id="sort-select" class="form-select form-select-sm" style="display: block;">
                                    <option value="default">Varsayılan</option>
                                    <option value="priceasc">Fiyata Göre: Artan</option>
                                    <option value="pricedesc">Fiyata Göre: Azalan</option>
                                    <option value="totalsolddesc">Toplam Satışa göre: Artan</option>
                                    <option value="totalsoldasc">Toplam Satışa göre: Azalan</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4">
                            <div class="filter__found">
                                <h6><span id="product-count"></span> @Model.Count() /@totalCount ürün görüntüleniyor</h6>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-3">
                            <div class="filter__option">
                                <span class="icon_grid-2x2"></span>
                                <span class="icon_ul"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="product-row" class="row">
                    

                    @foreach(var product in Model)
                    {
                        <div class="col-lg-4 col-md-6 col-sm-6">
                            <div class="product__item">
                                <div class="product__item__pic set-bg" data-setbg="@product.ImageUrl">
                                    <ul class="product__item__pic__hover">
                                        <input type="hidden" class="product-id" value="@product.Id"/>
                                        <li><a ><i class="fa fa-heart"></i></a></li>
                                        <li><a href="#"><i class="fa fa-retweet"></i></a></li>
                                        <li><a href="#" class="add-to-cart-btn"><i class="fa fa-shopping-cart"></i></a></li>
                                    </ul>
                                </div>
                                <div class="product__item__text">
                                    <h6><a asp-area="" asp-controller="Product" asp-action="Details" asp-route-id="@product.Id">@product.ProductName</a></h6>
                                    <h5>@product.Price TL</h5>
                                </div>
                            </div>
                        </div>
                    }             
                </div>
                <div class="product__pagination">
                    @for(int i = 1; i<= totalPages; i++)
                    {
                        <a class="@(i == currentPage ? "active" : "" )" data-page="@i"> @i </a>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Product Section End -->


<style>

    ul li.active > a {
        color: #7fad39;
        font-weight: bold;
    }


    .filter__sort span {
        color: #FFFF;
        background: #7fad39;
        display: block;
        border-radius: 5px;
        text-align: center;
    }

    .filter__sort {
        align-items:center;
        text-align:center;
        margin:0px;
    }

    .filter__sort select{
        border-radius:10px;
        width:100%;
    }


</style>



@section Scripts{


    <script>
        

        /////////////////////////////------------SAYFA YÜKLENDİĞİNDE YAPILACAK İŞLEMLER-------////////////////////////////
        document.addEventListener("DOMContentLoaded", function(){



            const paginationDiv = document.querySelector(".product__pagination");
            paginationDiv.addEventListener("click", function(event){

                const currentPageAnchor = paginationDiv.querySelector("a.active");
                const anchor = event.target.closest("a");
                if (!anchor) return;

                const page= anchor.dataset.page;

                const urlParams = new URLSearchParams(window.location.search);
                urlParams.forEach((value,key) =>{
                    if (filter.hasOwnProperty(key)){
                        filter[key] = value;
                    }
                });

                filter.Page = page;

                const cleanFilter = {};
                for (const key in filter) {
                    if (filter[key] !== null && filter[key] !== undefined && filter[key] !== "") {
                        cleanFilter[key] = filter[key];
                    }
                }

                const baseUrl = "/Product/GetProductsJSON";
                    const queryParams = new URLSearchParams(cleanFilter).toString();
                    const productRow = document.getElementById("product-row");

                    console.log(queryParams);

                    fetch(`${baseUrl}?${queryParams}`)
                        .then(res => res.json())
                        .then(data => {

                            productRow.innerHTML = ``;
                            console.log(data);
                            data.data.forEach(item => {
                                const newRow = `
                                <div class="col-lg-4 col-md-6 col-sm-6">
                                    <div class="product__item">
                                        <div class="product__item__pic set-bg" data-setbg="${item.imageUrl}">
                                            <ul class="product__item__pic__hover">
                                                <input type="hidden" class="product-id" value="${item.id}"/>
                                                <li><a ><i class="fa fa-heart"></i></a></li>
                                                <li><a href="#"><i class="fa fa-retweet"></i></a></li>
                                                <li><a href="#" class="add-to-cart-btn"><i class="fa fa-shopping-cart"></i></a></li>
                                            </ul>
                                        </div>
                                        <div class="product__item__text">
                                            <h6><a asp-area="" asp-controller="Product" asp-action="Details" asp-route-id="${item.id}">${item.productName}</a></h6>
                                            <h5>${item.price} TL</h5>
                                        </div>
                                    </div>
                                </div>

                                `;

                                productRow.innerHTML += newRow;
                                const addedDiv = productRow.lastElementChild.querySelector('.set-bg');
                                addedDiv.style.backgroundImage = `url('${item.imageUrl}')`;

                                currentPageAnchor.classList.remove("active");
                                anchor.classList.add("active");

                                });

                        });


            });



            ///// SIRALAMA İŞLEMİ //////////////////////////////////

                const filter = {
                        SearchTerm : null,
                        MinPrice : null,
                        MaxPrice : null,
                        CategoryId : null,
                        Page : null,
                        Size : null,
                        SortBy : null
                    };

                //parametreleri aldım
                const sortMenu = document.getElementById("sort-select");
                sortMenu.style.display = "";

                sortMenu.addEventListener("change", function(event){

                    const urlParams = new URLSearchParams(window.location.search);
                

                    urlParams.forEach((value,key) =>{
                        if (filter.hasOwnProperty(key)){
                            filter[key] = value;
                        }
                    });
                    //sortby ı değiştireyim//
                    filter["SortBy"] = event.target.value;
                    filter["Page"] = 1;


                    const cleanFilter = {};
                    for (const key in filter) {
                        if (filter[key] !== null && filter[key] !== undefined && filter[key] !== "") {
                            cleanFilter[key] = filter[key];
                        }
                    }

                    console.log(cleanFilter);
  

                    //fetch File verileri alıcam

                    const baseUrl = "/Product/GetProductsJSON";
                    const queryParams = new URLSearchParams(cleanFilter).toString();
                    const productRow = document.getElementById("product-row");

                    console.log(queryParams);

                    fetch(`${baseUrl}?${queryParams}`)
                        .then(res => res.json())
                        .then(data => {

                            productRow.innerHTML = ``;
                            console.log(data);
                            data.data.forEach(item => {
                                const newRow = `
                                <div class="col-lg-4 col-md-6 col-sm-6">
                                    <div class="product__item">
                                        <div class="product__item__pic set-bg" data-setbg="${item.imageUrl}">
                                            <ul class="product__item__pic__hover">
                                                <input type="hidden" class="product-id" value="${item.id}"/>
                                                <li><a ><i class="fa fa-heart"></i></a></li>
                                                <li><a href="#"><i class="fa fa-retweet"></i></a></li>
                                                <li><a href="#" class="add-to-cart-btn"><i class="fa fa-shopping-cart"></i></a></li>
                                            </ul>
                                        </div>
                                        <div class="product__item__text">
                                            <h6><a asp-area="" asp-controller="Product" asp-action="Details" asp-route-id="${item.id}">${item.productName}</a></h6>
                                            <h5>${item.price} TL</h5>
                                        </div>
                                    </div>
                                </div>

                                `;

                                productRow.innerHTML += newRow;
                                const addedDiv = productRow.lastElementChild.querySelector('.set-bg');
                                addedDiv.style.backgroundImage = `url('${item.imageUrl}')`; 
                                });
                            const activePage = document.querySelector(".product__pagination a.active");
                            activePage.classList.remove("active");
                            const allPages = document.querySelectorAll(".product__pagination a");
                            const page1 = Array.from(allPages).find(a => a.dataset.page === "1");
                            page1.classList.add("active");

                        });


                });


                //// Fiyat değişince tekrar istek atılacak

                const priceInput = document.querySelector(".price-input")
                priceInput.addEventListener("change", function(){

                    filterPriceChange();
                });


                $(".price-range").on("slidestop", function(event, ui){
                    filterPriceChange();
                });





                function filterPriceChange(){
                    const minAmount = document.getElementById("minamount").value;
                    const maxAmount = document.getElementById("maxamount").value;
                    console.log(minAmount)
                    const urlParams = new URLSearchParams(window.location.search);


                    urlParams.forEach((value,key) =>{
                        if (filter.hasOwnProperty(key)){
                            filter[key] = value;
                        }
                    });

                    filter["MinPrice"] = parseFloat(minAmount);
                    filter["MaxPrice"] = parseFloat(maxAmount);
                    filter["Page"] = 1;

                    const cleanFilter = {};
                        for (const key in filter) {
                            if (filter[key] !== null && filter[key] !== undefined && filter[key] !== "") {
                                cleanFilter[key] = filter[key];
                            }
                        }
                    console.log(cleanFilter);

                    const baseUrl = "/Product/GetProductsJSON";
                    const queryParams = new URLSearchParams(cleanFilter).toString();
                    const productRow = document.getElementById("product-row");

                    console.log(queryParams);
                    fetch(`${baseUrl}?${queryParams}`)
                        .then(res => res.json())
                        .then(data => {

                            productRow.innerHTML = ``;
                            console.log(data);
                            data.data.forEach(item => {
                                const newRow = `
                                <div class="col-lg-4 col-md-6 col-sm-6">
                                    <div class="product__item">
                                        <div class="product__item__pic set-bg" data-setbg="${item.imageUrl}">
                                            <ul class="product__item__pic__hover">
                                                <input type="hidden" class="product-id" value="${item.id}"/>
                                                <li><a ><i class="fa fa-heart"></i></a></li>
                                                <li><a href="#"><i class="fa fa-retweet"></i></a></li>
                                                <li><a href="#" class="add-to-cart-btn"><i class="fa fa-shopping-cart"></i></a></li>
                                            </ul>
                                        </div>
                                        <div class="product__item__text">
                                            <h6><a asp-area="" asp-controller="Product" asp-action="Details" asp-route-id="${item.id}">${item.productName}</a></h6>
                                            <h5>${item.price} TL</h5>
                                        </div>
                                    </div>
                                </div>

                                `;

                                productRow.innerHTML += newRow;
                                const addedDiv = productRow.lastElementChild.querySelector('.set-bg');
                                addedDiv.style.backgroundImage = `url('${item.imageUrl}')`;
                                });

                        });


                }
                    


                    

                    


               
                







         });
            ////////////////////////////// Resme tıklanınca ürün detay sayfasına gitme //////////////////

            document.getElementById("product-row").addEventListener("click", function(e) {
                const pic = e.target.closest(".product__item__pic");
                if (!pic) return;
                if (e.target.closest("a")) return;

                const featuredItem = pic.closest(".product__item");
                const productId = featuredItem.querySelector(".product-id").value;

                window.location.href = `/Product/Details/${productId}`;
            });



            //////////////       SEPETE ÜRÜN EKLEME /////////////////

            document.addEventListener("click", function(event){

                const button = event.target.closest(".add-to-cart-btn");
                if (!button) return;
                event.preventDefault();
                event.stopPropagation();
                

                const productItem = button.closest(".product__item");
                const productId = productItem.querySelector(".product-id").value;


                console.log("Sepete eklendi ", productId);



                fetch("/Cart/AddItemToCart", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ ProductId: productId })
                    })
                .then(res => res.json())
                .then(data => {
                    if(data.message){
                        Swal.fire({
                            title: "Başarılı!",
                            text: data.message,
                            icon: "success",
                            timer: 1500,
                            showConfirmButton: false
                        });
                    }
                    window.updateCartDiv();

                })
                .catch(err => {
                    console.error(err);
                    Swal.fire({
                        title: "Hata!",
                        text: "Ürün eklenemedi",
                        icon: "error"
                    });
                });


                    


            });



            ////////////// /////////////////////////////////////////////




   

            
           
           



        
    </script>



}